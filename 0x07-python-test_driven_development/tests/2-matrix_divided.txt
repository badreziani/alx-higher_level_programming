the ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
-------------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(5)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(5, 5)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 5)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[2, 4],[6, 12]], 2)
[[1.0, 2.0], [3.0, 6.0]]
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, "2", 3],[4, 5, 6]], 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2],[4, 5, 6]], "3")
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "3")
Traceback (most recent call last):
        ...
TypeError: div must be a number

